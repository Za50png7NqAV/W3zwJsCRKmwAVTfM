<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notification: New Updates on YOJNA PORTAL 2025 - Govt Schemes &amp; Sarkari Job Updates Daily</title>
    <link>http://localhost:1313/download/</link>
    <description>Recent content in Notification: New Updates on YOJNA PORTAL 2025 - Govt Schemes &amp; Sarkari Job Updates Daily</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/download/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://localhost:1313/download/generate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/download/generate/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xD;&#xA;&lt;html lang=&#34;en&#34;&gt;&#xD;&#xA;&lt;head&gt;&#xD;&#xA;    &lt;meta charset=&#34;UTF-8&#34; /&gt;&#xD;&#xA;    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34; /&gt;&#xD;&#xA;    &lt;title&gt;Generate Permanent Link&lt;/title&gt;&#xD;&#xA;&lt;/head&gt;&#xD;&#xA;&lt;body&gt;&#xD;&#xA;    &lt;h2&gt;Generate Permanent Link&lt;/h2&gt;&#xD;&#xA;    &lt;input type=&#34;text&#34; id=&#34;inputUrl&#34; placeholder=&#34;Enter URL to encode&#34; style=&#34;width: 80%;&#34; /&gt;&#xD;&#xA;    &lt;button onclick=&#34;generateLink()&#34;&gt;Generate Link&lt;/button&gt;&#xD;&#xA;    &lt;p id=&#34;generatedLink&#34;&gt;&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;    &lt;script&gt;&#xD;&#xA;        // Predefined tokens (custom static tokens)&#xD;&#xA;        const tokens = [&#xD;&#xA;            &#34;abc123&#34;, &#34;xyz456&#34;, &#34;pqr789&#34;, &#xD;&#xA;            &#34;rst111&#34;, &#34;mno222&#34;, &#34;uvw333&#34;&#xD;&#xA;        ];&#xD;&#xA;&#xD;&#xA;        function generateLink() {&#xD;&#xA;            const url = document.getElementById(&#39;inputUrl&#39;).value;&#xD;&#xA;            if (url) {&#xD;&#xA;                const encodedUrl = btoa(url); &#xD;&#xA;                const token = tokens[Math.floor(Math.random() * tokens.length)];&#xD;&#xA;&#xD;&#xA;                permanentLinks[token] = encodedUrl;&#xD;&#xA;&#xD;&#xA;                const permanentLink = `https://yojnaportal.com/download/pdf?token=${token}&amp;url=${encodedUrl}`;&#xD;&#xA;                &#xD;&#xA;                document.getElementById(&#39;generatedLink&#39;).innerHTML = `&#xD;&#xA;                    &lt;a href=&#34;${permanentLink}&#34; target=&#34;_blank&#34;&gt;${permanentLink}&lt;/a&gt;&#xD;&#xA;                `;&#xD;&#xA;            } else {&#xD;&#xA;                alert(&#34;Please enter a valid URL&#34;);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        // Store token and encoded URL mapping (to be accessed globally)&#xD;&#xA;        const permanentLinks = {&#xD;&#xA;            &#34;abc123&#34;: &#34;&#34;,&#xD;&#xA;            &#34;xyz456&#34;: &#34;&#34;,&#xD;&#xA;            &#34;pqr789&#34;: &#34;&#34;,&#xD;&#xA;            &#34;rst111&#34;: &#34;&#34;,&#xD;&#xA;            &#34;mno222&#34;: &#34;&#34;,&#xD;&#xA;            &#34;uvw333&#34;: &#34;&#34;&#xD;&#xA;        };&#xD;&#xA;    &lt;/script&gt;&#xD;&#xA;&lt;/body&gt;&#xD;&#xA;&lt;/html&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/download/loader/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/download/loader/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xD;&#xA;&lt;html lang=&#34;en&#34;&gt;&#xD;&#xA;&lt;head&gt;&#xD;&#xA;    &lt;meta charset=&#34;UTF-8&#34;&gt;&#xD;&#xA;    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;&#xD;&#xA;    &lt;title&gt;Base64 URL Loader&lt;/title&gt;&#xD;&#xA;    &lt;style&gt;&#xD;&#xA;        body {&#xD;&#xA;            font-family: Arial, sans-serif;&#xD;&#xA;            text-align: center;&#xD;&#xA;        }&#xD;&#xA;        iframe {&#xD;&#xA;            width: 100%;&#xD;&#xA;            height: 500px;&#xD;&#xA;            border: 1px solid #ccc;&#xD;&#xA;            border-radius: 8px;&#xD;&#xA;            margin-top: 20px;&#xD;&#xA;        }&#xD;&#xA;    &lt;/style&gt;&#xD;&#xA;&lt;/head&gt;&#xD;&#xA;&lt;body&gt;&#xD;&#xA;&#xD;&#xA;    &lt;h2&gt;Base64 URL Loader&lt;/h2&gt;&#xD;&#xA;    &lt;div id=&#34;statusMessage&#34;&gt;Loading...&lt;/div&gt;&#xD;&#xA;    &lt;iframe id=&#34;pdfFrame&#34; src=&#34;&#34;&gt;&lt;/iframe&gt;&#xD;&#xA;&#xD;&#xA;    &lt;script&gt;&#xD;&#xA;        window.onload = function() {&#xD;&#xA;            const urlParams = new URLSearchParams(window.location.search);&#xD;&#xA;            const encodedUrl = urlParams.get(&#39;url&#39;);&#xD;&#xA;&#xD;&#xA;            if (encodedUrl) {&#xD;&#xA;                try {&#xD;&#xA;                    const decodedUrl = atob(encodedUrl);&#xD;&#xA;                    document.getElementById(&#39;pdfFrame&#39;).src = decodedUrl;&#xD;&#xA;                    document.getElementById(&#39;statusMessage&#39;).innerText = &#34;PDF Loaded Successfully&#34;;&#xD;&#xA;                } catch (e) {&#xD;&#xA;                    document.getElementById(&#39;statusMessage&#39;).innerText = &#34;Invalid Base64 Format&#34;;&#xD;&#xA;                }&#xD;&#xA;            } else {&#xD;&#xA;                document.getElementById(&#39;statusMessage&#39;).innerText = &#34;No URL Provided&#34;;&#xD;&#xA;            }&#xD;&#xA;        };&#xD;&#xA;    &lt;/script&gt;&#xD;&#xA;&lt;/body&gt;&#xD;&#xA;&lt;/html&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/download/pdf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/download/pdf/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xD;&#xA;&lt;html lang=&#34;en&#34;&gt;&#xD;&#xA;&lt;head&gt;&#xD;&#xA;    &lt;meta charset=&#34;UTF-8&#34; /&gt;&#xD;&#xA;    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34; /&gt;&#xD;&#xA;    &lt;title&gt;Redirecting...&lt;/title&gt;&#xD;&#xA;&lt;/head&gt;&#xD;&#xA;&lt;body&gt;&#xD;&#xA;    &lt;script&gt;&#xD;&#xA;        // Predefined token and encoded URL mapping (same as in generate.html)&#xD;&#xA;        const permanentLinks = {&#xD;&#xA;            &#34;abc123&#34;: &#34;&#34;, &#xD;&#xA;            &#34;xyz456&#34;: &#34;&#34;,&#xD;&#xA;            &#34;pqr789&#34;: &#34;&#34;,&#xD;&#xA;            &#34;rst111&#34;: &#34;&#34;,&#xD;&#xA;            &#34;mno222&#34;: &#34;&#34;,&#xD;&#xA;            &#34;uvw333&#34;: &#34;&#34;&#xD;&#xA;        };&#xD;&#xA;&#xD;&#xA;        // Get token from URL parameters&#xD;&#xA;        const urlParams = new URLSearchParams(window.location.search);&#xD;&#xA;        const token = urlParams.get(&#39;token&#39;);&#xD;&#xA;&#xD;&#xA;        if (token &amp;&amp; permanentLinks[token]) {&#xD;&#xA;            const decodedUrl = atob(permanentLinks[token]); // Decode Base64 URL&#xD;&#xA;            window.location.href = decodedUrl; // Redirect to original URL&#xD;&#xA;        } else {&#xD;&#xA;            document.body.innerHTML = &#34;&lt;h2&gt;Invalid or Expired Link!&lt;/h2&gt;&#34;;&#xD;&#xA;        }&#xD;&#xA;    &lt;/script&gt;&#xD;&#xA;&lt;/body&gt;&#xD;&#xA;&lt;/html&gt;</description>
    </item>
  </channel>
</rss>
